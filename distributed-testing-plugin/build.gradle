plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish'
    id 'com.jfrog.artifactory'
}

group = 'com.r3.testing'
version = '1.2-LOCAL-K8S-SHARED-CACHE-SNAPSHOT'

ext {
    vcsUrl = 'https://github.com/corda/gradle-distributed-testing-plugin'
}

repositories {
    mavenCentral()
    jcenter()
}

gradlePlugin {
    plugins {
        distributedTestingPlugin {
            id = 'com.r3.testing.distributed-testing'
            implementationClass = 'com.r3.testing.DistributedTesting'
        }
        imageBuildingPlugin {
            id = 'com.r3.testing.image-building'
            implementationClass = 'com.r3.testing.ImageBuilding'
        }
    }
    automatedPublishing = true
}

dependencies {
    implementation "com.bmuschko:gradle-docker-plugin:$docker_plugin_version"
    implementation "io.fabric8:kubernetes-client:4.4.1"
    implementation "io.github.classgraph:classgraph:4.8.53"
    implementation 'org.apache.commons:commons-compress:1.19'
    implementation 'org.apache.commons:commons-csv:1.1'
    implementation group: 'org.jetbrains', name: 'annotations', version: '13.0'
    implementation('com.microsoft.azure:azure:1.3.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: assertj_version
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    // Prevent the project from creating temporary files outside of the build directory.
    systemProperty 'java.io.tmpdir', buildDir.absolutePath

    // Tell the tests where Gradle's current module cache is.
    // We need the tests to share this module cache to prevent the
    // Gradle Test-Kit from downloading its own copy of Kotlin etc.
    systemProperty 'test.gradle.user.home', project.gradle.gradleUserHomeDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId group
            artifactId 'gradle-distributed-testing-plugin'

            pom {
                name = 'Distributed Testing Plugin'
                description = 'Plugin that enables the paralellisation of tests using Docker and K8s'
                url = vcsUrl
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'R3'
                        name = 'R3'
                        email = 'dev@corda.net'
                    }
                }
                scm {
                    url = vcsUrl
                }
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://software.r3.com/artifactory'
        repository {
            repoKey = 'corda-dependencies-dev'
            username = System.getenv('CORDA_ARTIFACTORY_USERNAME') ?: System.getProperty('corda.artifactory.username')
            password = System.getenv('CORDA_ARTIFACTORY_PASSWORD') ?: System.getProperty('corda.artifactory.password')
        }

        defaults {
            publications('mavenJava')
        }

    }
}

tasks.named('artifactoryPublish') {
    dependsOn tasks.named('jar', Jar)
}

wrapper {
    gradleVersion = "5.6.4"
    distributionType = Wrapper.DistributionType.ALL
}
